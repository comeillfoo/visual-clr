syntax = "proto3";
package logcollector;

enum ResponseTypes {
    OK = 0;
    BUSY = 1;
    RESET = 2;
}

message CommonStatistics {
    double cpu = 3;
    uint64 read_bytes = 4;
    uint64 write_bytes = 5;
}

message TimestampRequest {
    uint32 pid = 1;
    double time = 2;
    string payload = 3;
    CommonStatistics stats = 4;
}

message TimestampIdRequest {
    uint32 pid = 1;
    double time = 2;
    uint64 id = 3;
    CommonStatistics stats = 4;
}

message ObjectWithGeneration {
    uint64 object_id = 1;
    bool has_generation = 2; // 'cause rust's tonic optional is experimental
    uint32 generation = 3;
}

message ObjectAllocatedStampRequest {
    uint32 pid = 1;
    double time = 2;
    ObjectWithGeneration object_gen = 3;
    uint64 object_size = 4;
    string class_name = 5;
    CommonStatistics stats = 6;
}

message UpdateGenerationsRequest {
    uint32 pid = 1;
    double time = 2;
    repeated ObjectWithGeneration objects = 3;
}

message OperationResponse {
    bool is_ok = 1;
    ResponseTypes response_type = 2;
}

message SessionStartRequest {
    uint32 pid = 1;
    string cmd = 2;
    string path = 3;
}

enum SessionFinishReason {
    SERVER_INTERRUPTED = 0;
    CLIENT_INTERRUPTED = 1;
}

message SessionFinishRequest {
    uint32 pid = 1;
    SessionFinishReason reason = 2;
}

service LogCollector {
    rpc ClassLoadStartStamp (TimestampRequest) returns (OperationResponse);
    rpc ClassLoadFinishedStamp (TimestampRequest) returns (OperationResponse);
    rpc ClassUnloadStartStamp (TimestampRequest) returns (OperationResponse);
    rpc ClassUnloadFinishedStamp (TimestampRequest) returns (OperationResponse);
    rpc JitCompilationStartStamp (TimestampRequest) returns (OperationResponse);
    rpc JitCompilationFinishedStamp (TimestampRequest) returns (OperationResponse);
    rpc ObjectAllocationStamp(ObjectAllocatedStampRequest) returns (OperationResponse);
    rpc GarbageCollectionFinishedStamp(UpdateGenerationsRequest) returns (OperationResponse);
    rpc ThreadCreated(TimestampIdRequest) returns (OperationResponse);
    rpc ThreadDestroyed(TimestampIdRequest) returns (OperationResponse);
    rpc ThreadResumed(TimestampIdRequest) returns (OperationResponse);
    rpc ThreadSuspended(TimestampIdRequest) returns (OperationResponse);
    rpc ExceptionThrown(TimestampRequest) returns (OperationResponse);
    rpc StartSession (SessionStartRequest) returns (OperationResponse);
    rpc FinishSession (SessionFinishRequest) returns (OperationResponse);
}

